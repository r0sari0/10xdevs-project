name: Pull Request CI

on:
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup project
        uses: ./.github/actions/setup-node-project
      
      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup project
        uses: ./.github/actions/setup-node-project
      
      - name: Run unit tests with coverage
        run: npm run test:unit -- --coverage
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup project
        uses: ./.github/actions/setup-node-project
      
      - name: Build project
        run: npm run build

  status-comment:
    name: PR Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    if: always()
    permissions:
      pull-requests: write
    
    steps:
      - name: Check job statuses
        id: check-status
        run: |
          # Set status
          if [ "${{ needs.lint.result }}" == "success" ] && \
             [ "${{ needs.unit-test.result }}" == "success" ] && \
             [ "${{ needs.build.result }}" == "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "message=✅ All checks passed successfully!" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "message=❌ Some checks failed. Please review the failed jobs." >> $GITHUB_OUTPUT
          fi
          
          # Set emoji for each job
          if [ "${{ needs.lint.result }}" == "success" ]; then
            echo "lint_emoji=✅" >> $GITHUB_OUTPUT
          else
            echo "lint_emoji=❌" >> $GITHUB_OUTPUT
          fi
          
          if [ "${{ needs.unit-test.result }}" == "success" ]; then
            echo "unit_test_emoji=✅" >> $GITHUB_OUTPUT
          else
            echo "unit_test_emoji=❌" >> $GITHUB_OUTPUT
          fi
          
          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "build_emoji=✅" >> $GITHUB_OUTPUT
          else
            echo "build_emoji=❌" >> $GITHUB_OUTPUT
          fi
      
      - name: Comment PR
        uses: actions/github-script@v8
        with:
          script: |
            const status = '${{ steps.check-status.outputs.status }}';
            const message = '${{ steps.check-status.outputs.message }}';
            
            const body = `## CI Status Report
            
            ${message}
            
            ### Job Results:
            - **Lint**: ${{ steps.check-status.outputs.lint_emoji }} ${{ needs.lint.result }}
            - **Unit Tests**: ${{ steps.check-status.outputs.unit_test_emoji }} ${{ needs.unit-test.result }}
            - **Build**: ${{ steps.check-status.outputs.build_emoji }} ${{ needs.build.result }}
            
            ---
            *Workflow run: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

